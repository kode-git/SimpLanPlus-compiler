
{

    // nl -> 1 :: [a,b,f]
    ^int a = new;
    ^int b = new;

    // Table :: [f()] -> [x,y,n] -> [block] -> [x,y,n] -> [block]

    void f(^int x, ^int y, int n) { // nl -> 2 :: [x,y,n]
        if (n == 0) { // nl -> 3 :: []
           delete y;
        }
        else {

            ^int w = new; // nl -> 3 :: [w]
            f(w,x, n-1); // x -> [d]
            delete y;     // y -> [d]
        }


        // [x -> d, y -> d]
    }
    a^=6;
    b^=3;
   f(a, b, 1);



}




// Fibonacci
/*
{

int f(int x){
    if(x <= 1) return x;
    else return f(x - 1) + f(x -2);
}

print(f(10));



}*/

